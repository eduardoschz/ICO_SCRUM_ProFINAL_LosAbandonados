/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aragon.ico.ingSoft;

import aragon.ico.contacto.*;
import java.awt.Color;
import java.awt.Image;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import Animacion.Animacion;
import java.util.Timer;
import java.util.TimerTask;

/**
 *
 * @author Muffin
 */
public class IngSoftConceptos extends javax.swing.JFrame {

    Timer timerControl;
    TimerTask controlmenu;

    /**
     * Creates new form ContactoMarco
     */
    public IngSoftConceptos() {

        initComponents();

        // La ventana se centrará en medio de la pantalla
        this.setLocationRelativeTo(null);
        getContentPane().setBackground(Color.white);
        this.lblInfo.setBackground(Color.white);

        // Los menus desplegables iniciaran ocultos
        jPDesplegableDAScrum.setVisible(false);
        jPDesplegableContacto.setVisible(false);

        // Logo de ICO
        ImageIcon iconoICO = new ImageIcon(System.getProperty("user.dir") + "/src/aragon/ico/imagenes/inicio/ICO.png");
        Icon logoICO = new ImageIcon(iconoICO.getImage().getScaledInstance(jLLogoICO.getWidth(), jLLogoICO.getHeight(), Image.SCALE_AREA_AVERAGING));
        jLLogoICO.setIcon(logoICO);

        ImageIcon infoIcon = new ImageIcon(System.getProperty("user.dir") + "/src/aragon/ico/imagenes/ingSoft/lblImagenes.png");
        //Icon icoIngSoft = new ImageIcon(infoIcon.getImage().getScaledInstance(lblInfo.getWidth(), lblInfo.getHeight(), Image.SCALE_AREA_AVERAGING));
        jLabel3.setIcon(infoIcon);
       // this.repaint();
        
        // Iniciar el Timer
        controlDesplegable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPBarraMenu = new javax.swing.JPanel();
        jLLogoICO = new javax.swing.JLabel();
        jBIng_Soft = new javax.swing.JButton();
        jBInicio = new javax.swing.JButton();
        jBDA_Scrum = new javax.swing.JButton();
        jBContacto = new javax.swing.JButton();
        jBSalir = new javax.swing.JButton();
        jPDesplegableDAScrum = new javax.swing.JPanel();
        jBDAgil = new javax.swing.JButton();
        jBScrum = new javax.swing.JButton();
        jPDesplegableContacto = new javax.swing.JPanel();
        jBProduct_Owner = new javax.swing.JButton();
        jBScrum_Master = new javax.swing.JButton();
        jBScrum_Team = new javax.swing.JButton();
        jPInformacionIS = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblInfo = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Scrum Master");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMaximumSize(new java.awt.Dimension(1200, 720));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(1200, 720));

        jPanel1.setPreferredSize(new java.awt.Dimension(1190, 2700));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPBarraMenu.setBackground(new java.awt.Color(245, 245, 245));

        jLLogoICO.setMaximumSize(new java.awt.Dimension(80, 80));
        jLLogoICO.setMinimumSize(new java.awt.Dimension(70, 70));

        jBIng_Soft.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jBIng_Soft.setForeground(java.awt.Color.gray);
        jBIng_Soft.setText("Ingeniería de Software");
        jBIng_Soft.setBorder(null);
        jBIng_Soft.setBorderPainted(false);
        jBIng_Soft.setContentAreaFilled(false);
        jBIng_Soft.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBIng_Soft.setFocusPainted(false);
        jBIng_Soft.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jBIng_SoftMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jBIng_SoftMouseEntered(evt);
            }
        });
        jBIng_Soft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBIng_SoftActionPerformed(evt);
            }
        });

        jBInicio.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jBInicio.setForeground(java.awt.Color.gray);
        jBInicio.setText("Inicio");
        jBInicio.setBorder(null);
        jBInicio.setBorderPainted(false);
        jBInicio.setContentAreaFilled(false);
        jBInicio.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBInicio.setFocusPainted(false);
        jBInicio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jBInicioMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jBInicioMouseEntered(evt);
            }
        });

        jBDA_Scrum.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jBDA_Scrum.setForeground(java.awt.Color.gray);
        jBDA_Scrum.setText("Desarrollo Ágil y Scrum");
        jBDA_Scrum.setBorder(null);
        jBDA_Scrum.setBorderPainted(false);
        jBDA_Scrum.setContentAreaFilled(false);
        jBDA_Scrum.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBDA_Scrum.setFocusPainted(false);
        jBDA_Scrum.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jBDA_ScrumMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jBDA_ScrumMouseEntered(evt);
            }
        });
        jBDA_Scrum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDA_ScrumActionPerformed(evt);
            }
        });

        jBContacto.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jBContacto.setForeground(java.awt.Color.gray);
        jBContacto.setText("Contacto");
        jBContacto.setBorder(null);
        jBContacto.setBorderPainted(false);
        jBContacto.setContentAreaFilled(false);
        jBContacto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBContacto.setFocusPainted(false);
        jBContacto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jBContactoMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jBContactoMouseEntered(evt);
            }
        });
        jBContacto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBContactoActionPerformed(evt);
            }
        });

        jBSalir.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jBSalir.setForeground(java.awt.Color.gray);
        jBSalir.setText("Salir");
        jBSalir.setBorder(null);
        jBSalir.setBorderPainted(false);
        jBSalir.setContentAreaFilled(false);
        jBSalir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBSalir.setFocusPainted(false);
        jBSalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jBSalirMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jBSalirMouseEntered(evt);
            }
        });
        jBSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPBarraMenuLayout = new javax.swing.GroupLayout(jPBarraMenu);
        jPBarraMenu.setLayout(jPBarraMenuLayout);
        jPBarraMenuLayout.setHorizontalGroup(
            jPBarraMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPBarraMenuLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLLogoICO, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(jBInicio, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                .addGap(30, 30, 30)
                .addComponent(jBIng_Soft, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)
                .addGap(30, 30, 30)
                .addComponent(jBDA_Scrum, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
                .addGap(30, 30, 30)
                .addComponent(jBContacto, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                .addGap(30, 30, 30)
                .addComponent(jBSalir, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                .addGap(50, 50, 50))
        );
        jPBarraMenuLayout.setVerticalGroup(
            jPBarraMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPBarraMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPBarraMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPBarraMenuLayout.createSequentialGroup()
                        .addGroup(jPBarraMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jBInicio)
                            .addComponent(jBIng_Soft)
                            .addComponent(jBDA_Scrum)
                            .addComponent(jBContacto)
                            .addComponent(jBSalir))
                        .addGap(0, 43, Short.MAX_VALUE))
                    .addComponent(jLLogoICO, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel1.add(jPBarraMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1190, 90));

        jPDesplegableDAScrum.setBackground(new java.awt.Color(245, 245, 245));

        jBDAgil.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jBDAgil.setForeground(java.awt.Color.gray);
        jBDAgil.setText("Desarrollo Ágil");
        jBDAgil.setBorder(null);
        jBDAgil.setBorderPainted(false);
        jBDAgil.setContentAreaFilled(false);
        jBDAgil.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBDAgil.setFocusPainted(false);
        jBDAgil.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jBDAgil.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBDAgil.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jBDAgilMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jBDAgilMouseExited(evt);
            }
        });

        jBScrum.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jBScrum.setForeground(java.awt.Color.gray);
        jBScrum.setText("Scrum");
        jBScrum.setBorder(null);
        jBScrum.setBorderPainted(false);
        jBScrum.setContentAreaFilled(false);
        jBScrum.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBScrum.setFocusPainted(false);
        jBScrum.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jBScrum.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBScrum.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jBScrumMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jBScrumMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPDesplegableDAScrumLayout = new javax.swing.GroupLayout(jPDesplegableDAScrum);
        jPDesplegableDAScrum.setLayout(jPDesplegableDAScrumLayout);
        jPDesplegableDAScrumLayout.setHorizontalGroup(
            jPDesplegableDAScrumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPDesplegableDAScrumLayout.createSequentialGroup()
                .addContainerGap(74, Short.MAX_VALUE)
                .addGroup(jPDesplegableDAScrumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBDAgil, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBScrum, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPDesplegableDAScrumLayout.setVerticalGroup(
            jPDesplegableDAScrumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPDesplegableDAScrumLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBDAgil)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBScrum)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPDesplegableDAScrum, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 20, 240, 70));

        jPDesplegableContacto.setBackground(new java.awt.Color(245, 245, 245));

        jBProduct_Owner.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jBProduct_Owner.setForeground(java.awt.Color.gray);
        jBProduct_Owner.setText("Product Owner");
        jBProduct_Owner.setBorder(null);
        jBProduct_Owner.setBorderPainted(false);
        jBProduct_Owner.setContentAreaFilled(false);
        jBProduct_Owner.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBProduct_Owner.setFocusPainted(false);
        jBProduct_Owner.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jBProduct_Owner.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jBProduct_OwnerMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jBProduct_OwnerMouseExited(evt);
            }
        });

        jBScrum_Master.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jBScrum_Master.setForeground(java.awt.Color.gray);
        jBScrum_Master.setText("Scrum Master");
        jBScrum_Master.setBorder(null);
        jBScrum_Master.setBorderPainted(false);
        jBScrum_Master.setContentAreaFilled(false);
        jBScrum_Master.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBScrum_Master.setFocusPainted(false);
        jBScrum_Master.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jBScrum_Master.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jBScrum_MasterMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jBScrum_MasterMouseExited(evt);
            }
        });

        jBScrum_Team.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jBScrum_Team.setForeground(java.awt.Color.gray);
        jBScrum_Team.setText("Scrum Team");
        jBScrum_Team.setBorder(null);
        jBScrum_Team.setBorderPainted(false);
        jBScrum_Team.setContentAreaFilled(false);
        jBScrum_Team.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jBScrum_Team.setFocusPainted(false);
        jBScrum_Team.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jBScrum_Team.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jBScrum_TeamMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jBScrum_TeamMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPDesplegableContactoLayout = new javax.swing.GroupLayout(jPDesplegableContacto);
        jPDesplegableContacto.setLayout(jPDesplegableContactoLayout);
        jPDesplegableContactoLayout.setHorizontalGroup(
            jPDesplegableContactoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPDesplegableContactoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPDesplegableContactoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBProduct_Owner, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBScrum_Master, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBScrum_Team, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPDesplegableContactoLayout.setVerticalGroup(
            jPDesplegableContactoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPDesplegableContactoLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jBProduct_Owner)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBScrum_Master)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBScrum_Team)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPDesplegableContacto, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 0, 160, 90));

        jPInformacionIS.setBackground(new java.awt.Color(255, 255, 255));
        jPInformacionIS.setPreferredSize(new java.awt.Dimension(1190, 2700));

        jLabel1.setBackground(Color.WHITE);
        jLabel1.setFont(new java.awt.Font("Berlin Sans FB", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(17, 134, 198));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("<html><b> Ingeniería de Software </b> </html>");
        jLabel1.setToolTipText("");

        lblInfo.setBackground(new java.awt.Color(255, 255, 255));
        lblInfo.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        lblInfo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblInfo.setText("<html>     <h3>   <font color=#1186C6 size=+1> ¿Qué es la ingenieria de software? </font></h3>     </font>     <p>       <ul>         <li type=\"square\">La ingeniería de software es el establecimiento y uso de principios robustos de la ingeniería a fin de obtener <br> económicamente software que sea fiable y que funcione eficientemente sobre máquinas reales.         </li>         <li type=\"square\">Es la aplicación de enfoque sistemático, disciplinado y cuantificable hacia el desarrollo, <br> operación y mantenimiento del software</li>         <li type=\"square\">Disciplina que establece el uso de principios de ingeniería robustos, orientados a obtener software económico, <br> que sea confiable y funcione de manera eficiente.</li>       </ul>     </p>       <h3><font color=#1186C6 size=+1>Ciclo de vida </font></h3>      <br> Método formal para producir algún resultado. Los métodos de la ingeniería del software indican \"cómo\" construir técnicamente el software. <br>      Dependen de un conjunto de principios básicos que gobiernan cada área de la tecnología e incluyen de modelado y otras técnicas descriptivas.     <ol>       <li>Análisis y definición de requerimientos.</li>       <li>Diseño del sistema</li>       <li>Codificación del sistema (Desarrollo)</li>       <li>Pruebas unitarias</li>       <li>Pruebas de integración</li>       <li>Pruebas del sistema</li>       <li>Implementación del sistema</li>       <li>Mantenimiento</li>       <li>Fin del ciclo de vida (post-mortem)</li>     </ol>      <h3>  <font color=#1186C6 size=+1> Analisis y definicion de requerimientos. </font> </h3>     <dfn>Entender el problema y capturar los requerimientos funcionales, entidades y actividades.</dfn>     <ul>       <li>Busca delimitar los alcances del sistema.</li>       <li>Realizada por el analista de sistemas.</li>       <li>Punto de partida para determinar el costo del proyecto.</li>     </ul>      <h3> <font color=#1186C6 size=+1> Diseño del sistema </font></h3>     <dfn>Es el proceso <b>creativo</b> de transformacion de un problema a una solución.</dfn>     <ul>       <li>Determina las tecnologias</li>       <li>El diseñador divide el sistema en paquetes (subsistemas)</li>       <li>Define la estructura del producto</li>     </ul>        <h3><font color=#1186C6 size=+1>Codificacion del sistema</font></h3>     <dfn>En base en el diseño se lleva la programación del sistema.</dfn>     <ul>       <li>Proceso ejecutado por el programador y de manera individual.</li>       <li>Criterio de entrada: Diseño.</li>       <li>Criterio de salida: Código ejecutable.</li>     </ul>        <h3><font color=#1186C6 size=+1>Pruebas unitarias</font></h3>     <dfn>Se examina el código y se compara con las especificaciones y el diseño.</dfn>     <ul>       <li>Se llevan a cabo casos de prueba.</li>       <li>Un programa es correcto si implementa las funciones y los datos correctamente como está indicado en el diseño.</li>     </ul>          <h3><font color=#1186C6 size=+1>Pruebas de integración </font></h3>       <dfn>Se realizan mediante la incorporación de los módulos.</dfn>       <ul>         <li>Las pruebas de integración sirven también para determinar qué tan eficiente es el diseño.</li>       </ul>        <h3><font color=#1186C6 size=+1>Pruebas del sistema </font> </h3>     <dfn>Se verifica que cumpla con las funciones propuestas al inicio.</dfn>     <ul>       <li>Involucra a veces al cliente para determinar que la solución que se le ofreció es la que se le va a entregar.</li>     </ul>        <h3><font color=#1186C6 size=+1>Implementación del sistema </font></h3>     <ul>       <li>Instalación</li>       <li>Capacitación</li>       <li>Plan de implantación</li>   </ul>      <h3><font color=#1186C6 size=+1>Mantenimiento </font> </h3>     <ul>       <li>Mantenimiento correctivo</li>       <li>Mantenimiento adaptativo</li>       <li>Mantenimiento perfectivo</li>     </ul>        <h3><font color=#1186C6 size=+1>Post-mortem</font></h3>     <dfn>Cierre del proyecto</dfn>     <ul>       <li>Se analiza la madurez en el proceso de desarrollo de software.</li>       <li>Se establecen áreas de oportunidad.</li>       <li>Lecciones aprendidas.</li>       <li>Mejora Continua</li>     </ul>       <h3><font color=#1186C6 size=+1>Herramientas para el desarrollo de software</font></h3>     <dfn>Instrumento o sistema automatizado para realizar de manera más exacta, eficiente y productiva una tarea.</dfn> <br>     <dd>Se establece un sistema de soporte para el desarrollo del software llamado ingeniería de <br> software asistido por computadora (<b>CASE</b>).</dd>     <ul>       <li>Lenguajes de programación</li>       <li>Paradigmas de programación</li>       <li>IDE's</li>       <li>SGBD</li>       <li>Herramientas de modelado</li>       <li>Herramientas de gestion de proyectos</li>       <li>Sistemas de control de versiones</li>       <li>Sistemas de control de cambios</li>       <li>API's para pruebas unitarias</li>       <li>Sistemas de integracion</li>       <li>Cloud computing</li>       <li>Software de ofimática</li>       <li>Software de prototipo y maquetado</li>       <li>CASE: Computer Aided Software Egnineering</li>       <li>Etc...</li>     </ul>       <h3><font color=#1186C6 size=+1>Proceso de desarrollo de software como instrumento <br> rector en la construcción de software de calidad.</font></h3>     <ul>       <li>El procedimiento es una receta para lograr el cometido.</li>       <li>Establece las actividades principales</li>       <li>Cada actividad tiene criterios de entrada y salida</li>       <li>Utiliza recursos y está sujeto a una serie de restricciones</li>     </ul>      <h3><font color=#1186C6 size=+1>Proceso de ingeniería software.</font></h3> <dfn>Es la definición de un conjunto de actividades que permiten transformar los requisitos de  <br>un cliente/usuario en un sistema software.</dfn>     <ul>       Ejemplos:       <li>PSP, Personal Software Proccess.</li>       <li>TSP, Team Software Proccess.</li>       <li>Rational Unified Proccess</li>     </ul>        <h3><font color=#1186C6 size=+1>Centrado en la calidad</font></h3>     <dfn>Cualquier enfoque de ingeniería debe descansar sobre un empeño de organización de calidad.</dfn>     <ul>       <li>La gestión total de calidad y las filosofías similares fomentan una cultura continua de <br> mejoras de procesos.</li>       <li>Esta cultura la que conduce últimamente al desarrollo de enfoques cada vez más robustos para <br> la ingeniería de software.</li>       Abarca un conjunto de tres elementos claves:       <ul>         <li>Fases</li>         <li>Herramientas</li>         <li>Procesos</li>       </ul>       <li>Desarrolla estos tres elementos para asegurar la calidad del software</li>     </ul> </html> ");
        lblInfo.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lblInfo.setAutoscrolls(true);
        lblInfo.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        lblInfo.setMaximumSize(new java.awt.Dimension(1200, 2600));
        lblInfo.setMinimumSize(new java.awt.Dimension(1100, 2600));
        lblInfo.setPreferredSize(new java.awt.Dimension(1100, 2600));

        javax.swing.GroupLayout jPInformacionISLayout = new javax.swing.GroupLayout(jPInformacionIS);
        jPInformacionIS.setLayout(jPInformacionISLayout);
        jPInformacionISLayout.setHorizontalGroup(
            jPInformacionISLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1)
            .addGroup(jPInformacionISLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 853, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPInformacionISLayout.setVerticalGroup(
            jPInformacionISLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPInformacionISLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPInformacionISLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 2649, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 2660, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPInformacionIS, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 1180, 2700));

        jScrollPane1.setViewportView(jPanel1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 720));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBIng_SoftMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBIng_SoftMouseEntered
        jBIng_Soft.setForeground(Color.DARK_GRAY);
    }//GEN-LAST:event_jBIng_SoftMouseEntered

    private void jBIng_SoftMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBIng_SoftMouseExited
        jBIng_Soft.setForeground(Color.GRAY);
    }//GEN-LAST:event_jBIng_SoftMouseExited

    private void jBInicioMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBInicioMouseEntered
        jBInicio.setForeground(Color.DARK_GRAY);
    }//GEN-LAST:event_jBInicioMouseEntered

    private void jBInicioMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBInicioMouseExited
        jBInicio.setForeground(Color.GRAY);
    }//GEN-LAST:event_jBInicioMouseExited

    private void jBIng_SoftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBIng_SoftActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBIng_SoftActionPerformed

    private void jBDA_ScrumMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBDA_ScrumMouseEntered
        jBDA_Scrum.setForeground(Color.DARK_GRAY);
    }//GEN-LAST:event_jBDA_ScrumMouseEntered

    private void jBDA_ScrumMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBDA_ScrumMouseExited
        jBDA_Scrum.setForeground(Color.GRAY);
    }//GEN-LAST:event_jBDA_ScrumMouseExited

    private void jBDA_ScrumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDA_ScrumActionPerformed
        int posicion = jPDesplegableDAScrum.getY();
        if (posicion < 90) {
            if (jPDesplegableContacto.isVisible()) {
                jPDesplegableContacto.setVisible(false);
            }
            jPDesplegableDAScrum.setVisible(true);
            Animacion.bajar(20, 90, 1, jPDesplegableDAScrum);
        } else {
            Animacion.subir(90, 20, 1, jPDesplegableDAScrum);
            jPDesplegableDAScrum.setVisible(false);
        }
    }//GEN-LAST:event_jBDA_ScrumActionPerformed

    private void jBContactoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBContactoMouseEntered
        jBContacto.setForeground(Color.DARK_GRAY);
    }//GEN-LAST:event_jBContactoMouseEntered

    private void jBContactoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBContactoMouseExited
        jBContacto.setForeground(Color.GRAY);
    }//GEN-LAST:event_jBContactoMouseExited

    private void jBContactoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBContactoActionPerformed
        int posicion = jPDesplegableContacto.getY();
        if (posicion < 90) {
            if (jPDesplegableDAScrum.isVisible()) {
                jPDesplegableDAScrum.setVisible(false);
            }
            jPDesplegableContacto.setVisible(true);
            Animacion.bajar(0, 90, 1, jPDesplegableContacto);
        } else {
            Animacion.subir(90, 0, 1, jPDesplegableContacto);
            jPDesplegableContacto.setVisible(false);
        }
    }//GEN-LAST:event_jBContactoActionPerformed

    private void jBSalirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBSalirMouseEntered
        jBSalir.setForeground(Color.DARK_GRAY);
    }//GEN-LAST:event_jBSalirMouseEntered

    private void jBSalirMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBSalirMouseExited
        jBSalir.setForeground(Color.GRAY);
    }//GEN-LAST:event_jBSalirMouseExited

    private void jBSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_jBSalirActionPerformed

    private void jBDAgilMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBDAgilMouseEntered
        if (jPDesplegableDAScrum.isVisible()) {
            jBDAgil.setForeground(Color.DARK_GRAY);
        }
    }//GEN-LAST:event_jBDAgilMouseEntered

    private void jBDAgilMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBDAgilMouseExited
        if (jPDesplegableDAScrum.isVisible()) {
            jBDAgil.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_jBDAgilMouseExited

    private void jBScrumMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBScrumMouseEntered
        if (jPDesplegableDAScrum.isVisible()) {
            jBScrum.setForeground(Color.DARK_GRAY);
        }
    }//GEN-LAST:event_jBScrumMouseEntered

    private void jBScrumMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBScrumMouseExited
        if (jPDesplegableDAScrum.isVisible()) {
            jBScrum.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_jBScrumMouseExited

    private void jBProduct_OwnerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBProduct_OwnerMouseEntered
        if (jPDesplegableContacto.isVisible()) {
            jBProduct_Owner.setForeground(Color.DARK_GRAY);
        }
    }//GEN-LAST:event_jBProduct_OwnerMouseEntered

    private void jBProduct_OwnerMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBProduct_OwnerMouseExited
        if (jPDesplegableContacto.isVisible()) {
            jBProduct_Owner.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_jBProduct_OwnerMouseExited

    private void jBScrum_MasterMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBScrum_MasterMouseEntered
        if (jPDesplegableContacto.isVisible()) {
            jBScrum_Master.setForeground(Color.DARK_GRAY);
        }
    }//GEN-LAST:event_jBScrum_MasterMouseEntered

    private void jBScrum_MasterMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBScrum_MasterMouseExited
        if (jPDesplegableContacto.isVisible()) {
            jBScrum_Master.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_jBScrum_MasterMouseExited

    private void jBScrum_TeamMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBScrum_TeamMouseEntered
        if (jPDesplegableContacto.isVisible()) {
            jBScrum_Team.setForeground(Color.DARK_GRAY);
        }
    }//GEN-LAST:event_jBScrum_TeamMouseEntered

    private void jBScrum_TeamMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBScrum_TeamMouseExited
        if (jPDesplegableContacto.isVisible()) {
            jBScrum_Team.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_jBScrum_TeamMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IngSoftConceptos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IngSoftConceptos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IngSoftConceptos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IngSoftConceptos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IngSoftConceptos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBContacto;
    private javax.swing.JButton jBDA_Scrum;
    private javax.swing.JButton jBDAgil;
    private javax.swing.JButton jBIng_Soft;
    private javax.swing.JButton jBInicio;
    private javax.swing.JButton jBProduct_Owner;
    private javax.swing.JButton jBSalir;
    private javax.swing.JButton jBScrum;
    private javax.swing.JButton jBScrum_Master;
    private javax.swing.JButton jBScrum_Team;
    private javax.swing.JLabel jLLogoICO;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPBarraMenu;
    private javax.swing.JPanel jPDesplegableContacto;
    private javax.swing.JPanel jPDesplegableDAScrum;
    private javax.swing.JPanel jPInformacionIS;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblInfo;
    // End of variables declaration//GEN-END:variables

    public void controlDesplegable() {
        int lapso = 1000;

        controlmenu = new TimerTask() {
            @Override
            public void run() {
                if (jPDesplegableDAScrum.isVisible() && jPDesplegableDAScrum.getY() < 90) {
                    jPDesplegableDAScrum.setVisible(false);
                }

                if (jPDesplegableContacto.isVisible() && jPDesplegableContacto.getY() < 90) {
                    jPDesplegableContacto.setVisible(false);
                }
            }
        };

        timerControl = new Timer();
        timerControl.scheduleAtFixedRate(controlmenu, lapso, 1000);
    }
}
